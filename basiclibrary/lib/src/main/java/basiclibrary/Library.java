/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.*;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
//Rolling Dice Function
    public static ArrayList<Integer> roll(int n){
            ArrayList<Integer> rollingResult = new ArrayList<Integer>();
        for (int i = 1 ; i<= n ; i++){
            Random r = new Random();
            int low = 1;
            int high = 7;
            int result = r.nextInt(high-low) + low;
            rollingResult.add(result);
        }
            System.out.println(rollingResult);

        return rollingResult;
    }

    // Contains Duplicates Function
    public static boolean containsDuplicates(int[] arr) {
        boolean result = false;
        for (int i =0 ;i< arr.length ; i++ ){
            for (int j = i+1 ; j < arr.length; j++){
                if(arr[i] == arr[j]){
                    result= true;
                    return result;
                }else {
                    result= false;
                }
            }

        }
        return result;
    }

    //Calculating Averages Function
    public static double avgCalculator(int[] arr){
//        int result = 0;
//        for (int i : arr){
//            int sum = Arrays.stream(arr).sum();
            OptionalDouble avg = Arrays.stream(arr).average();

            return avg.getAsDouble();

    }

// Arrays of Arrays
    public static int [] avgArrays (int [][] arr){
        ArrayList<Double> avgsOfArr = new ArrayList<>(); // Create an ArrayList object
        int [] leastAvgArr = arr[0];
        int indexOfLeastAvgArr = 0;
        Double leastAvg = Arrays.stream(arr[0]).average().getAsDouble();

        for (int i = 0 ; i<arr.length ; i++){
            Double avg = Arrays.stream(arr[i]).average().getAsDouble();
            if(avg<leastAvg){
                leastAvg=avg;
                indexOfLeastAvgArr = i;
            }

        }


        return arr[indexOfLeastAvgArr];

    }

    public static String analyzWeather(int [][] arr){
        String analyzingResult="" ;
        Set<Integer> integersSet = new HashSet<Integer>();
        int max = arr[0][0];
        int min = arr[0][0];

        for(int[] s: arr ){
            for (int item : s){
                if(item < min && item != min){

                    min = item;
                }
                if (item>max && item != max){
                    max = item;
                }
            }
        }

        for(int[] s: arr ){
            for (int item : s){
                if(item != min && item != max){
            integersSet.add(item); }
            }
        }

        System.out.println("High: "+max);
        System.out.println("Low: "+min);
        ArrayList<String> notContain = new ArrayList<String>();
        int counter = min+1;
        for (int i = counter; counter < max; i++) {
//            System.out.println(min);
            if (!integersSet.contains(i)){
                System.out.println("Never saw temperature: "+i);
                notContain.add(String.valueOf(i));
            }
            counter++;
        }
        analyzingResult += "the max is: "+max+", the min is: "+min+", Never saw temperature: "+notContain;
        return analyzingResult;
    }

    public static String tally(List<String> votes){
        HashMap<String,Integer> lsitOfNames = new HashMap<String,Integer>();

        for(String item: votes){
            lsitOfNames.put(item,0);
        }

        for(String item: votes){

            lsitOfNames.put(item,lsitOfNames.get(item)+1);
        }
        System.out.println(lsitOfNames);
        String highVoteName = "Name";
        int maxVotNum = 0;
        for (String i : lsitOfNames.keySet()) {
            System.out.println("key: " + i + " value: " + lsitOfNames.get(i));
            if(lsitOfNames.get(i)>maxVotNum){
                maxVotNum= lsitOfNames.get(i);
                highVoteName = i;
            }
        }
        System.out.println(highVoteName);
    return highVoteName;
    }

    public static void main(String[] args) {
        int [] test = {1,4,5,9,9,6};
//        System.out.println(containsDuplicates(test));
//        System.out.println(avgCalculator(test));

//        roll(4);

        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}

        };

//        System.out.println(avgArrays(weeklyMonthTemperatures));

        System.out.println(analyzWeather(weeklyMonthTemperatures));

        analyzWeather(weeklyMonthTemperatures);

        //Tallying Election
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = tally(votes);
        System.out.println(winner + " received the most votes!");


    }
//    public ArrayList
}
